#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

/ {
    combos {
        compatible = "zmk,combos";

        backslashtest {
            bindings = <&kp BACKSLASH>;
            key-positions = <5 6>;
            layers = <0>;
        };

        btprofile {
            bindings = <&bt BT_NXT>;
            key-positions = <0 11>;
            layers = <1>;
        };

        arcmain {
            bindings = <&mo 3>;
            key-positions = <2 3>;
        };

        arcdi {
            bindings = <&sl 4>;
            key-positions = <4 3>;
        };

        arcwork {
            bindings = <&kp LC(NUMBER_3)>;
            key-positions = <4 5>;
        };
    };

    macros {
        just_copy: new_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_COMMAND &kp C>;
            label = "NEW_MACRO";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            label = "Base";
            bindings = <
&kp TAB    &kp Q  &kp W  &kp E          &kp R             &kp T        &kp Y    &kp U  &kp I      &kp O    &kp P     &kp BSPC
&kp LCTRL  &kp A  &kp S  &kp D          &kp F             &kp G        &kp H    &kp J  &kp K      &kp L    &kp SEMI  &kp SQT
&kp LSHFT  &kp Z  &kp X  &kp C          &kp V             &kp B        &kp N    &kp M  &kp COMMA  &kp DOT  &kp FSLH  &kp ESC
                         &kp RIGHT_ALT  &kp LEFT_COMMAND  &kp SPACE    &kp RET  &mo 2  &mo 1
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            label = "Lower";
            bindings = <
&kp TAB    &trans  &kp N7        &kp N8            &kp N9             &trans          &trans    &trans     &trans    &trans     &trans  &kp BSPC
&trans     &trans  &kp NUMBER_4  &kp N5            &kp NUMBER_6       &trans          &kp LEFT  &kp DOWN   &kp UP    &kp RIGHT  &trans  &trans
&kp LSHFT  &trans  &kp NUMBER_1  &kp NUMBER_2      &kp NUMBER_3       &kp NUMBER_0    &trans    &kp SPACE  &trans    &trans     &trans  &trans
                                 &kp LEFT_CONTROL  &kp RIGHT_COMMAND  &kp SPACE       &kp RET   &trans     &kp RALT
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            label = "Raise";
            bindings = <
&kp TILDE  &kp EXCL  &kp AT  &kp HASH  &kp DLLR   &kp PRCNT    &kp CARET             &kp AMPS               &kp KP_MULTIPLY  &kp MINUS         &kp UNDERSCORE  &kp ESC
&kp LCTRL  &trans    &trans  &trans    &kp GRAVE  &kp PLUS     &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp LBKT         &kp RBKT          &kp BSLH        &kp EQUAL
&kp LSHFT  &trans    &trans  &trans    &trans     &kp MINUS    &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp LESS_THAN    &kp GREATER_THAN  &kp PIPE        &kp TILDE
                             &kp LGUI  &trans     &kp SPACE    &kp RET               &trans                 &kp RALT
            >;
        };

        layer_3 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &kp C_PLAY_PAUSE   &trans      &trans  &trans           &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &kp C_VOLUME_DOWN  &kp C_NEXT  &trans  &kp C_VOLUME_UP  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans             &trans      &trans  &trans           &trans  &trans
                        &trans  &trans  &trans    &trans             &trans      &trans
            >;
        };

        layer_4 {
            bindings = <
&trans  &trans  &trans  &trans      &trans  &trans    &trans        &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans      &trans  &trans    &trans        &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &just_copy  &trans  &trans    &mmv MOVE_UP  &trans  &trans  &trans  &trans  &trans
                        &trans      &trans  &trans    &trans        &trans  &trans
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        hmlayer {
            if-layers = <0>;
            then-layer = <3>;
        };
    };
};
